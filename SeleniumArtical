Въведение






История







Селениум IDE






Селениум Remote Control

Селениум Remote Control (RC) е сървър, написан на Java, който приема команди за браузъра чрез HTTP. RC прави възможно да се напишат автоматизирани тестове за уеб приложения, на който и да е език за програмиране, което дава възможност за по-добра интеграция на Селениум в съществуващите софтуерни рамки за компонентно тестване (unit testing frameworks). За да направи по-лесно писането на тестове, проектът Селениум в момента осигурява клиентски драйвери за PHP, Python, Ruby, .NET, Perl и Java. Java драйверът може да се използва с JavaScript (чрез Rhino engine). Необходима е нова инстанция на Селениум RC сървъра, за да стартират тестови варианти (test cases) за HTML - което означава, че портът трябва да бъде различен за всяко едно паралелно тестване. Обаче, за Java/PHP тестов вариант (test case) само една инстанция на Селениум RC трябва да работи непрекъснато.






Селеним WebDriver

Selenium WebDriver е усъвършенстван вариант на Selenium RC. Selenium WebDriver приема команди (изпратени от Selenese или ClientAPI) и ги изпраща към уеб браузъра. Имплементира се през browser – специален браузър драйвер, служещ за изпращане на команди към браузър и връщането на резултат. Повечето от браузър драйверите отварят браузър приложения (като Firefox, Internet Explorer); също така има и HtmlUnit драйвер, който симулира браузър, използващ HtmlUnit.
За разлика от Selenium 1, където Selenium сървърът беше нужно да изпълнява тестове, Selenium WebDriver не се нуждае от сървър за да изпълнява тестове. Вместо това WebDriver директно стартира инстанция на браузъра и го контролира. Въпреки това е възможно използването на Selenium Grid с WebDriver за да се изпълняват тестове върху отдалечени системи(remote systems). Където е възможно, WebDriver използва вътрешни за операционната система команди на ниско ниво за контролиране на браузъра, вместо браузър-базирани JavaScript команди. Това помага да се избегнат проблеми с тънките разлики между командите на ниско ниво и JavaScript командите, като ограниченията за сигурност. Selenium WebDriver e създаден за по-добра поддръжка на динамични уеб страници, където елементи от страницата могат да се променят без да се презарежда страницата.
На практика това означава, че Selenium 2.0 API има значително по-малко извиквания от Selenium 1.0 API. Докато Selenium 1.0 се стреми да представи богат интерфейс за много различни операции на браузъра, Selenium 2.0 се стреми да представи набор от градивни блокове, чрез които потребителите да могат да изградят свой собствен DSL (Domain Specific Language) или по-точно обектно-ориентирано API с добър дизайн и поддръжка на модерни и напреднали “web-app testing” проблеми. Такъв DSL вече съществува: Watir проектът в езика Ruby има голям набор от добри дизайни. В Ruby, Watir-webdriver  имплементира Watir API като обвивка на Selenium WebDriver. Watir-webdriver е създаден напълно автоматично чрез WebDriver и HTML спесификации.
През 2012 г., Simon Steward(създателят на WebDriver), който е работел тогава за Google, а сега за Facebook, и David Burns от Mozilla са обсъждали с W3C, WebDriver да бъде обявен като интернет стандарт. През юли 2012 г. е пуснат раборещият проект. Selenium WebDriver (Selenium 2.0) е напълно имплементиран и поддържан от Phyton, Ruby, Java и C#.





Селениум Grid





Селениум Екосистема
